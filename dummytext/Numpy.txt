Introduction à NumPy
NumPy est la librairie Python dédiée au calcul scientifique fournissant des fonctions très performantes de calcul, mais aussi des structures de données, tout aussi performantes. 
En Data Science, il est essentiel d’avoir des structures adaptées pour stocker et manipuler de grandes quantités de données. C’est là qu’intervient NumPy, qui intègre une nouvelle structure de données en Python, les ndarrays (tableaux à N dimensions, en français, N représentant un chiffre), qui sont des tableaux multidimensionnels ou matrices. Il est important de noter que cette structure de données permet de stocker des données uniquement de même type (uniquement des nombres entiers par exemple).
Les ndarrays sont optimisés pour le stockage de données, mais aussi pour leur manipulation et plus encore pour les calculs, car ceux-ci peuvent être vectorisés. NumPy peut gérer de très gros tableaux et est très performante en temps de calcul sur ces tableaux : les ndarrays prennent en effet moins de place mémoire que d’autres objets Python, comme par exemple les listes. C’est pour cela que cette librairie a été développée et qu’elle est si utilisée : elle est très performante. C’est également pour cette raison que de nombreuses librairies ont été développées au-dessus de celle-ci, telle que Pandas.
Les ndarrays de NumPy peuvent être unidimensionnels (aussi appelés 1D array, ce qu’on peut voir comme une liste), bidimensionnels (2D array) donc un tableau avec des lignes et des colonnes, ou encore des tableaux à plus de deux dimensions (3D array, 4D array, 5D array...). Les ndarrays à deux dimensions est la structure de données la plus utilisées en Data Science pour manipuler de grands jeux de données.
Lorsque vous souhaitez effectuer des opérations mathématiques ou logiques rapides sur un grand jeu de données, NumPy est votre allié. Pour pouvoir utiliser NumPy sous Python, il suffit de charger la librairie sous Jupyter, celle-ci étant déjà installée dans la distribution Anaconda.
